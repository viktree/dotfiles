#!/bin/sh

name="Vikram Venkataranan"
email="14256527+viktree@users.noreply.github.com"
username="viktree"

is_mac(){
    [ "$(uname)" = "Darwin" ]
}

check_for_command() {
    command -v "$1" >/dev/null 2>&1
}

# Setup XDG Base Directory
# Having these exported ensures that programs are installed to the correct locations
export XDG_LOCAL_HOME="$HOME/.local"
export XDG_DATA_HOME="$XDG_LOCAL_HOME/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"

export GITCONFIG_DIR="$XDG_CONFIG_HOME/git"


if is_mac
then
    # Disable the sound effects on boot
    sudo nvram SystemAudioVolume=" "

    # Set highlight color to green
    defaults write NSGlobalDomain AppleHighlightColor -string "0.764700 0.976500 0.568600"

    # Save to disk (not to iCloud) by default
    defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

    # Disable the “Are you sure you want to open this application?” dialog
    defaults write com.apple.LaunchServices LSQuarantine -bool false

    # Remove duplicates in the “Open With” menu (also see `lscleanup` alias)
    /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user

    # Disable Notification Center and remove the menu bar icon
    launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null

    # Finder: show hidden files by default
    defaults write com.apple.finder AppleShowAllFiles -bool true

    # Finder: show all filename extensions
    defaults write NSGlobalDomain AppleShowAllExtensions -bool true

    # Finder: show status bar
    defaults write com.apple.finder ShowStatusBar -bool true

    # Finder: show path bar
    defaults write com.apple.finder ShowPathbar -bool true

    # Display full POSIX path as Finder window title
    defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

    # Show the /Volumes folder
    sudo chflags nohidden /Volumes

    # Avoid creating .DS_Store files on network or USB volumes
    defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
    defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

    # Prevent Time Machine from prompting to use new hard drives as backup volume
    defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

    if ! check_for_command brew && check_for_command ruby
    then
        echo "Installing homebrew"
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    export HOMEBREW_BUNDLE_FILE="$XDG_CONFIG_HOME/brew/config"
    export HOMEBREW_CASK_OPTS="--appdir=/Applications --fontdir=/Library/Fonts"
    export HOMEBREW_NO_ANALYTICS=1

    export BREW_PREFIX="$(/usr/local/bin/brew --prefix)"
    export BREW_PREFIX_LLVM="$(/usr/local/bin/brew --prefix llvm)"

    export CFLAGS="-I$(brew --prefix openssl)/include"
    export LDFLAGS="-L$(brew --prefix openssl)/lib"

    if [ -f "$XDG_CONFIG_HOME/brew/config" ]
    then
        echo "Updating homebrew bundles"
        brew bundle
        brew cleanup -s
        brew bundle cleanup --force
    fi
fi

if check_for_command nvim
then nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
fi


git config --global user.name "$name"
git config --global user.email "$email"
git config --global user.username "$username"

git config --global github.user "$username"

# Why two formats?
git config --global help.autocorrect "1"
git config --global rebase.autoStash "true"

git config --global core.editor "$EDITOR"

if [ -f "$GITCONFIG_DIR/ignore" ]
then git config --global core.excludesfile "$GITCONFIG_DIR/ignore"
fi

if [ -f "$GITCONFIG_DIR/commit_message" ]
then git config --global commit.template "$GITCONFIG_DIR/commit_message"
fi

git config --global color.branch.current "yellow reverse"
git config --global color.branch.local "yellow"
git config --global color.branch.remote "green"
git config --global color.status.changed "yellow"
git config --global color.status.added "green"
git config --global color.status.untracked "red"
git config --global color.diff.meta "yellow bold"
git config --global color.diff.frag "magenta bold"
git config --global color.diff.old "red"
git config --global color.diff.new "green"

# Branch Aliases
git config --global alias.branch-name "rev-parse --abbrev-ref HEAD"
git config --global alias.new-branch "checkout -b"

# other aliases
git config --global alias.ls "status -s"
git config --global alias.fix "commit -a --amend --no-edit"

if check_for_command fzf
then
    git_list_files="git ls-files --modified --exclude-standard"
    fzf_flags="-m --ansi --preview \"git diff \$@ --color=always -- {-1}\")"
    git config --global alias.ia "!git add \$($git_list_files | fzf $fzf_flags"
fi

# Save password
if is_mac
then git config --global credential.helper osxkeychain
else git config --global credential.helper cache
fi

if [ -f "$HOME/.gitconfig" ]
then
	mkdir -p "$GITCONFIG_DIR"
	mv "$HOME/.gitconfig" "$GITCONFIG_DIR/config"
fi

